//
//  ProfileInteractor.swift
//  LetsTell
//
//  Created by Павел Чернышев on 27.03.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ProfileBusinessLogic {
    func logout(request: Profile.Logout.Request)
    func loadOwner(request: Profile.User.Request)
}

protocol ProfileDataStore {
    // var name: String { get set }
}

class ProfileInteractor: ProfileBusinessLogic, ProfileDataStore {

    var storeToken = RealmTokenStorage()
    var storeOwner = RealmOwnerStorage()
    
    var presenter: ProfilePresentationLogic?
    
    func logout(request: Profile.Logout.Request) {
        guard let presenter = self.presenter else {
            return
        }
        if !storeToken.removeToken() {
            print("Couldn't delete exest token in logout")
        }
        if !storeOwner.removeAll() {
            print("Couldn't delete user info in logout")
        }
        let response = Profile.Logout.Response(logout: true)
        presenter.presentLogout(response: response)
    }
    
    func loadOwner(request: Profile.User.Request) {
        guard let owner = storeOwner.getOwner() else {
            return
        }
        presenter?.presentOwner(response: Profile.User.Response(owner: owner))
    }
}
