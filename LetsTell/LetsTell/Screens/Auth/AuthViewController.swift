//
//  AuthViewController.swift
//  LetsTell
//
//  Created by Павел Чернышев on 12.03.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import SwiftUI

protocol AuthDisplayLogic: class {
    func displayLogin(viewModel: Auth.Login.ViewModel)
}

class AuthViewController: AuthDisplayLogic, ObservableObject {
    var interactor: AuthBusinessLogic?
    @Published var userAuth: UserAuth?
    @Published var errorMessage = ""
    @Published var disabledSignin = false
    
    // MARK: Object lifecycle
    
    public func setup(container: ObjectsGetter) {
        let viewController = self
        let interactor = AuthInteractor(factory: container.getObject(),
                                        tokenStorage: container.getObject(),
                                        ownerStorage: container.getObject(),
                                        tokenCheker: container.getObject(),
                                        tokenRefresher: container.getObject())
        let presenter = AuthPresenter()
        
        userAuth = container.getObject()
        
        viewController.interactor = interactor
        interactor.presenter = presenter
        presenter.viewController = viewController
    }
    
    public func login(email: String, password: String) {
        DispatchQueue.main.async {
            self.disabledSignin = true
        }
        self.interactor?.login(request: Auth.Login.Request(login: email, password: password))
    }
    
    public func loginBySavedToken(completion: @escaping (Bool) -> Void) {
        interactor?.loginBySavedToken(request: Auth.LoginByToken.Request(completion: completion))
    }
    
    public func logout() {
        DispatchQueue.main.async {
            self.userAuth?.isLoggedin = false
        }
    }
    
    func displayLogin(viewModel: Auth.Login.ViewModel) {
        if let errorMess = viewModel.errorMessage {
            DispatchQueue.main.async {
                self.errorMessage = errorMess
                self.disabledSignin = false
            }
        } else if viewModel.loginSucces {
            DispatchQueue.main.async {
                self.userAuth?.isLoggedin = true
                self.disabledSignin = false
            }
        }
    }
}
